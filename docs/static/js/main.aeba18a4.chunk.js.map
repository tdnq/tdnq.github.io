{"version":3,"sources":["pages lazy /^/.//.*$/ groupOptions: {} namespace object","config/router.js","utils/webglTexture.js","webgl_page/basicLayout.js","layouts/BasicLayout.jsx","utils/router.js","componets/loading/index.jsx","App.js","serviceWorker.js","index.js","utils/webglBase.js","layouts/index.module.scss","webgl_page/source_shader/index.js"],"names":["map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","all","slice","t","keys","Object","module","exports","layoutsType","pagesRouterConfig","path","component","layout","Texture","props","string","params","width","height","font_family","fontSize","x_axis","y_axis","canvas","document","createElement","ctx","getContext","font","textMetrics","measureText","style","textAlign","align","textBaseline","baseline","fillStyle","fillRect","color","fillText","gl","texture","textureCanvas","pixelStorei","UNPACK_FLIP_Y_WEBGL","bindTexture","TEXTURE_2D","texImage2D","RGBA","UNSIGNED_BYTE","texParameteri","TEXTURE_MAG_FILTER","LINEAR","TEXTURE_MIN_FILTER","LINEAR_MIPMAP_NEAREST","generateMipmap","Base","BasicLayout","ele","this","canvasContainer","current","createCanvas","appendCanvas","drawTexture","vertex","Float32Array","getRandomArray","length","fillShaderAttribution","rotateWidth","translate","shadowColor","shadowOffsetX","shadowOffsetY","shadowBlur","strokeStyle","lineWidth","globalCompositeOperation","scale","strokeText","Header","Content","Footer","logoRef","React","createRef","Webgl_BasicLayout","drawLogo","className","exact","to","ref","styles","logo","children","Date","getFullYear","Component","getRouteComponent","info","Page","defaultProps","navKey","LoadPage","Loadable","loader","loading","App","pagesConfig","item","index","key","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","WebglBase","appendChild","console","error","type","len","num","res","i","temp","Array","forEach","Math","random","push","shaderSource","vertexShader","loadShader","VERTEX_SHADER","vshader","fragmentShader","FRAGMENT_SHADER","fshader","program","createProgram","attachShader","linkProgram","getProgramParameter","LINK_STATUS","useProgram","_program","shaderType","shader","shaderObj","createShader","compileShader","getShaderParameter","COMPILE_STATUS","data","name","size","FLOAT","stride","offset","shaderAttribution","getAttribLocation","buffer","createBuffer","bindBuffer","ARRAY_BUFFER","bufferData","STATIC_DRAW","fSize","BYTES_PER_ELEMENT","vertexAttribPointer","enableVertexAttribArray","ELEMENT_ARRAY_BUFFER","shaderUniform","count","uniform","getUniformLocation","arg","rotateCubeUseMouseShaderSource"],"mappings":"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","file":"static/js/main.aeba18a4.chunk.js","sourcesContent":["var map = {\n\t\"./common/404\": [\n\t\t42,\n\t\t9,\n\t\t2,\n\t\t5\n\t],\n\t\"./common/404/\": [\n\t\t42,\n\t\t9,\n\t\t2,\n\t\t5\n\t],\n\t\"./common/404/index\": [\n\t\t42,\n\t\t9,\n\t\t2,\n\t\t5\n\t],\n\t\"./common/404/index.jsx\": [\n\t\t42,\n\t\t9,\n\t\t2,\n\t\t5\n\t],\n\t\"./frontPage\": [\n\t\t44,\n\t\t9,\n\t\t0,\n\t\t1,\n\t\t3\n\t],\n\t\"./frontPage/\": [\n\t\t44,\n\t\t9,\n\t\t0,\n\t\t1,\n\t\t3\n\t],\n\t\"./frontPage/index\": [\n\t\t44,\n\t\t9,\n\t\t0,\n\t\t1,\n\t\t3\n\t],\n\t\"./frontPage/index.jsx\": [\n\t\t44,\n\t\t9,\n\t\t0,\n\t\t1,\n\t\t3\n\t],\n\t\"./shader\": [\n\t\t43,\n\t\t9,\n\t\t0,\n\t\t4\n\t],\n\t\"./shader/\": [\n\t\t43,\n\t\t9,\n\t\t0,\n\t\t4\n\t],\n\t\"./shader/index\": [\n\t\t43,\n\t\t9,\n\t\t0,\n\t\t4\n\t],\n\t\"./shader/index.jsx\": [\n\t\t43,\n\t\t9,\n\t\t0,\n\t\t4\n\t],\n\t\"./shader/index.module.scss\": [\n\t\t167,\n\t\t7,\n\t\t12\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn Promise.all(ids.slice(2).map(__webpack_require__.e)).then(function() {\n\t\treturn __webpack_require__.t(id, ids[1])\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 155;\nmodule.exports = webpackAsyncContext;","export let layoutsType = [\"basicLayouts\"];\n\nexport let pagesRouterConfig = [\n   {\n      path: \"/\",\n      component: \"frontPage/index.jsx\",\n      layout: layoutsType[0]\n   },\n   {\n      path: \"/shader/:shaderClass/:shaderName\",\n      component: \"shader/index.jsx\",\n      layout: layoutsType[0]\n   },\n   {\n      path: \"/404\",\n      component: \"common/404/index.jsx\",\n      layout: layoutsType[0]\n   },\n];","import Base from \"./webglBase.js\";\n\nexport default class Texture extends Base {\n    constructor(...props) {\n        super(...props);\n    }\n    createTextureCanvas(string = \"\", params = {\n        width: 50,\n        height: 50,\n        font_family:\"monospace\",\n        fontSize: \"24px\",\n        x_axis: 0,\n        y_axis: 0\n    }) {\n        let canvas = document.createElement(\"canvas\");\n        let ctx = canvas.getContext(\"2d\");\n        ctx.font = `${params.fontSize} ${params.font_family}`;\n\n        let textMetrics = ctx.measureText(string);\n\n        canvas.width = textMetrics.width;\n        canvas.height = textMetrics.height;\n        canvas.style.width = textMetrics.width + \"px\";\n        canvas.style.height = textMetrics.height + \"px\";\n\n        // reapply font style since canvas is resized\n        ctx.font = `${params.fontSize} ${params.font_family}`;\n        ctx.textAlign = params.align || \"center\";\n        ctx.textBaseline = params.baseline || \"middle\";\n        // Make the canvas transparent for simplicity\n        ctx.fillStyle = \"transparent\";\n        ctx.fillRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n\n        ctx.fillStyle = params.color || \"white\";\n        ctx.fillText(string, textMetrics.width / 2, textMetrics.height / 2);\n\n        return canvas;\n    }\n    handleLoadedTexture(gl,texture, textureCanvas) {\n        gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\n    \n        gl.bindTexture(gl.TEXTURE_2D, texture);\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, textureCanvas); // This is the important line!\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR_MIPMAP_NEAREST);\n        gl.generateMipmap(gl.TEXTURE_2D);\n    \n        gl.bindTexture(gl.TEXTURE_2D, null);\n    }\n}","import Texture from \"../utils/webglTexture.js\";\nimport { basicLayoutShaderSouce } from \"./source_shader/index.js\";\n\nexport default class BasicLayout extends Texture {\n    constructor(...props) {\n        super(...props);\n    }\n    drawLogo(ele) {\n        //init envirment\n        this.canvasContainer = ele.current;\n        this.createCanvas(40, 60).appendCanvas();\n        this.drawTexture(\"TD'blog\");\n    }\n    drawLogo_initBuffer() {\n        let unit = 3;\n        let vertex = new Float32Array(\n            [\n                0, 0, 0, 0.8, 0, 0, 0, 1, 0\n            ]\n        );\n        let color = new Float32Array(this.getRandomArray(4 * vertex.length / unit));\n        this.fillShaderAttribution(vertex, \"a_position\", vertex.length / unit);\n        this.fillShaderAttribution(color, \"a_color\", 4);\n        return vertex.length / unit;\n    }\n    drawTexture(string = \"\", params = {\n        width: 144,\n        height: 64,\n        font_family: \"monospace\",\n        fontSize: \"24px\",\n        x_axis: 0,\n        y_axis: 0\n    }) {\n        let canvas = this.ele;\n        let ctx = this.ele.getContext(\"2d\");\n        ctx.font = `${params.fontSize} ${params.font_family}`;\n        canvas.width = params.width;\n        canvas.height = params.height;\n\n        //the properties of string\n        let rotateWidth = ctx.measureText(string).width;\n\n        // initialization background\n        ctx.fillStyle = \"transparent\"\n        ctx.fillRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n\n        //change the origin\n        ctx.translate(params.width / 2, params.height / 2);\n\n        //set font attribution\n        ctx.font = `${params.fontSize} ${params.font_family}`;\n        ctx.textBaseline = \"bottom\";\n        ctx.fillStyle = params.color || \"white\";\n        ctx.textAlign = params.align || \"center\";\n        ctx.shadowColor = \"#588fbfed\";\n        ctx.shadowOffsetX = 2;\n        ctx.shadowOffsetY = 1;\n        ctx.shadowBlur = 4;\n        // draw text\n        ctx.fillText(string, 0, rotateWidth / 5);\n\n        //draw reflection\n        ctx.shadowColor = \"#3c424845\";\n        ctx.shadowOffsetX = 2;\n        ctx.shadowOffsetY = 1;\n        ctx.shadowBlur = 4;\n        ctx.strokeStyle = \"#d9dbdc9e\";\n        ctx.lineWidth = 1;\n        ctx.globalCompositeOperation = \"source-over\";\n        // ctx.translate(0, metrics.height + offsetRefectionY)\n        ctx.scale(1, -1);\n        ctx.strokeText(string, 0, 0);\n\n        return true;;\n    }\n}","import React from \"react\";\nimport { Layout } from 'antd';\nimport styles from \"./index.module.scss\";\nimport Webgl_BasicLayout from \"../webgl_page/basicLayout\";\nimport {NavLink} from \"react-router-dom\";\n\n\nconst { Header, Content, Footer } = Layout;\nexport default class BasicLayout extends React.Component {\n    constructor(props) {\n        super(props);\n        this.logoRef = React.createRef();\n    }\n    componentDidMount() {\n        (new Webgl_BasicLayout()).drawLogo(this.logoRef);\n    }\n    render() {\n        return (\n            <Layout className=\"layout\">\n                <Header>\n                    <NavLink exact to=\"/\">\n                        <span ref={this.logoRef} className={styles.logo}></span>\n                    </NavLink> \n                </Header>\n                <Content>\n                    {this.props.children}\n                </Content>\n                <Footer style={{ textAlign: 'center' }}>Copyright&copy;{new Date().getFullYear()}.TD</Footer>\n            </Layout>\n        )\n    }\n\n}\nBasicLayout.defaultProps = {\n    navKey: 3\n}","\nimport React from \"react\";\nimport BasicLayout from \"../layouts/BasicLayout.jsx\";\n\nexport function getRouteComponent(info = {}, loadPage) {\n    let Page = loadPage(info.component);\n    if (info.layout) {\n      return function () {\n        return <BasicLayout>\n          <Page />\n        </BasicLayout>\n      }\n    }\n    else {\n      return Page;\n    }\n  }","import React from \"react\";\nimport { Spin } from 'antd';\nimport Loadable from 'react-loadable';\n\nconst  LoadPage =(path) => Loadable({\n    loader: () => import(`../../pages/${path}`),\n    loading: () => {\n        return <div className=\"loading\">\n            <Spin />\n        </div>\n    }\n});\nexport default LoadPage;","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch,Redirect } from \"react-router-dom\";\nimport { pagesRouterConfig as pagesConfig } from \"./config/router\";\nimport { getRouteComponent } from \"./utils/router\";\nimport LoadPage from \"./componets/loading/index.jsx\";\nimport \"./App.module.scss\"\n\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        {\n          pagesConfig.map((item, index) => {\n            return <Route\n              path={item.path}\n              exact\n              component={\n                getRouteComponent(item, LoadPage)\n              }\n              key={item.component}\n            />\n          })\n        }\n        <Redirect to=\"/404\" />\n      </Switch>\n    </Router >\n  )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","export default class WebglBase {\n    constructor(ele) {\n        this.canvasContainer = ele || document.getElementById(\"canvasContainer\");\n        this.ele = null;\n        this.gl = null;\n    }\n    createCanvas(width, height) {\n        let ele = document.createElement(\"canvas\");\n        ele.width = width;\n        ele.height = height;\n        this.ele = ele;\n        return this;\n    }\n    appendCanvas() {\n        if (!this.ele) {\n            console.error(\"no canvas element\");\n            return;\n        }\n        this.canvasContainer.appendChild(this.ele);\n        return this;\n    }\n    getWebglContext(type = \"webgl\") {\n        if (this.ele.getContext(type)) {\n            this.gl = this.ele.getContext(type);\n        } else {\n            console.error(`no ${type} context`);\n            return null;\n        }\n    }\n    getRandomArray(len, num) {\n        let res = [];\n        if (!num) {\n            for (let i = 0; i < len; i++) {\n                res.push(Math.random());\n            }\n        } else {\n            for (let i = 0; i < num; i++) {\n                let temp = new Array(len);\n                temp.forEach((item, index) => {\n                    temp[index] = Math.random();\n                });\n                res.push(temp);\n            }\n        }\n        return res;\n    }\n    initShader(shaderSource) {\n        let vertexShader = this.loadShader(this.gl.VERTEX_SHADER, shaderSource.vshader);\n        let fragmentShader = this.loadShader(this.gl.FRAGMENT_SHADER, shaderSource.fshader);\n        if (!vertexShader || !fragmentShader) {\n            return false;\n        }\n        let program = this.gl.createProgram();\n\n        this.gl.attachShader(program, vertexShader);\n        this.gl.attachShader(program, fragmentShader);\n        this.gl.linkProgram(program);\n\n        let linkStatus = this.gl.getProgramParameter(program, this.gl.LINK_STATUS);\n        if (!linkStatus) {\n            return false;\n        }\n\n        this.gl.useProgram(program);\n        this.gl._program = program;\n        return true;\n    }\n    loadShader(shaderType, shader) {\n        let shaderObj = this.gl.createShader(shaderType);\n        this.gl.shaderSource(shaderObj, shader);\n        this.gl.compileShader(shaderObj);\n        let compileStatus = this.gl.getShaderParameter(shaderObj, this.gl.COMPILE_STATUS);\n        if (!compileStatus) {\n            return null;\n        }\n        return shaderObj;\n    }\n    fillShaderAttribution(data, name = \"\", size = 4, type = this.gl.FLOAT, stride = 0, offset = 0) {\n        let shaderAttribution = this.gl.getAttribLocation(this.gl._program, name);\n        let buffer = this.gl.createBuffer();\n        if (!buffer) {\n            return false;\n        }\n        this.gl.bindBuffer(this.gl.ARRAY_BUFFER, buffer);\n        this.gl.bufferData(this.gl.ARRAY_BUFFER, data, this.gl.STATIC_DRAW);\n\n        let fSize = data.BYTES_PER_ELEMENT;\n        this.gl.vertexAttribPointer(shaderAttribution, size, type, false, fSize * stride, fSize * offset);\n        this.gl.enableVertexAttribArray(shaderAttribution);\n        return true;\n    }\n    fillElementsIndex(data) {\n        let buffer = this.gl.createBuffer();\n        if (!buffer) {\n            return false;\n        }\n        this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER, buffer);\n        this.gl.bufferData(this.gl.ELEMENT_ARRAY_BUFFER, data, this.gl.STATIC_DRAW);\n        return true;\n    }\n    fillUniformData(data, shaderUniform, count = 4, type = \"\") {\n        let uniform = this.gl.getUniformLocation(this.gl._program, shaderUniform);\n        if (!uniform) {\n            return false;\n        }\n        let arg = type === \"Matrix\" ? [uniform, false, data] : [uniform, data]\n        this.gl[`uniform${type}${count}fv`](...arg);\n    }\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logo\":\"layouts_logo__1JSrc\"};","\n export const basicLayoutShaderSource = {\n    vshader: `\n            attribute vec4 a_position;\n            attribute vec4 a_color;\n            varying vec4 f_color;\n            void main(){\n                gl_Position = a_position;\n                f_color = a_color;\n            }\n        `,\n    fshader: `\n            precision mediump float;\n            varying vec4 f_color;\n            void main(){\n                gl_FragColor = f_color;\n            }\n        `\n}\n\nexport const rotateCubeUseMouseShaderSource={\n        vshader: `\n            attribute vec4 a_position;\n            attribute vec4 a_color;\n            varying vec4 f_color;\n            uniform mat4 u_transformMatrix;\n            void main(){\n                gl_Position = u_transformMatrix * a_position;\n                f_color = a_color;\n                gl_PointSize = 10.0;\n            }\n        `,\n    fshader: `\n            precision mediump float;\n            varying vec4 f_color;\n            void main(){\n                gl_FragColor = f_color;\n            }\n        `\n}\n"],"sourceRoot":""}