"use strict";(globalThis.webpackChunktdnq_github_io=globalThis.webpackChunktdnq_github_io||[]).push([[4694,9637],{7885:(t,o,n)=>{n.d(o,{pn:()=>e,cn:()=>r,J9:()=>i});const e=[0,0,0,.1],r=[0,0,0,.1],i="#d8dadd"},9637:(t,o,n)=>{function e(t){var o;null===(o=t.querySelectorAll("canvas"))||void 0===o||o.forEach((t=>t.remove()))}n.d(o,{e:()=>e})},6057:(t,o,n)=>{n.d(o,{y:()=>e});var e=function(t){let o,n,e;if(t&&"object"===typeof t&&t.hasOwnProperty("elements")){for(n=t.elements,e=new Float32Array(16),o=0;o<16;++o)e[o]=n[o];this.elements=e}else this.elements=new Float32Array([1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1])};e.prototype.setIdentity=function(){const t=this.elements;return t[0]=1,t[4]=0,t[8]=0,t[12]=0,t[1]=0,t[5]=1,t[9]=0,t[13]=0,t[2]=0,t[6]=0,t[10]=1,t[14]=0,t[3]=0,t[7]=0,t[11]=0,t[15]=1,this},e.prototype.set=function(t){let o,n,e;if(n=t.elements,e=this.elements,n!==e){for(o=0;o<16;++o)e[o]=n[o];return this}},e.prototype.concat=function(t){let o,n,e,r,i,s,a,l;if(n=this.elements,e=this.elements,r=t.elements,n===r)for(r=new Float32Array(16),o=0;o<16;++o)r[o]=n[o];for(o=0;o<4;o++)i=e[o],s=e[o+4],a=e[o+8],l=e[o+12],n[o]=i*r[0]+s*r[1]+a*r[2]+l*r[3],n[o+4]=i*r[4]+s*r[5]+a*r[6]+l*r[7],n[o+8]=i*r[8]+s*r[9]+a*r[10]+l*r[11],n[o+12]=i*r[12]+s*r[13]+a*r[14]+l*r[15];return this},e.prototype.multiply=e.prototype.concat,e.prototype.multiplyVector3=function(t){const o=this.elements,n=t.elements,e=new r,i=e.elements;return i[0]=n[0]*o[0]+n[1]*o[4]+n[2]*o[8]+o[12],i[1]=n[0]*o[1]+n[1]*o[5]+n[2]*o[9]+o[13],i[2]=n[0]*o[2]+n[1]*o[6]+n[2]*o[10]+o[14],e},e.prototype.multiplyVector4=function(t){const o=this.elements,n=t.elements,e=new i,r=e.elements;return r[0]=n[0]*o[0]+n[1]*o[4]+n[2]*o[8]+n[3]*o[12],r[1]=n[0]*o[1]+n[1]*o[5]+n[2]*o[9]+n[3]*o[13],r[2]=n[0]*o[2]+n[1]*o[6]+n[2]*o[10]+n[3]*o[14],r[3]=n[0]*o[3]+n[1]*o[7]+n[2]*o[11]+n[3]*o[15],e},e.prototype.transpose=function(){let t,o;return t=this.elements,o=t[1],t[1]=t[4],t[4]=o,o=t[2],t[2]=t[8],t[8]=o,o=t[3],t[3]=t[12],t[12]=o,o=t[6],t[6]=t[9],t[9]=o,o=t[7],t[7]=t[13],t[13]=o,o=t[11],t[11]=t[14],t[14]=o,this},e.prototype.setInverseOf=function(t){let o,n,e,r,i;if(n=t.elements,e=this.elements,r=new Float32Array(16),r[0]=n[5]*n[10]*n[15]-n[5]*n[11]*n[14]-n[9]*n[6]*n[15]+n[9]*n[7]*n[14]+n[13]*n[6]*n[11]-n[13]*n[7]*n[10],r[4]=-n[4]*n[10]*n[15]+n[4]*n[11]*n[14]+n[8]*n[6]*n[15]-n[8]*n[7]*n[14]-n[12]*n[6]*n[11]+n[12]*n[7]*n[10],r[8]=n[4]*n[9]*n[15]-n[4]*n[11]*n[13]-n[8]*n[5]*n[15]+n[8]*n[7]*n[13]+n[12]*n[5]*n[11]-n[12]*n[7]*n[9],r[12]=-n[4]*n[9]*n[14]+n[4]*n[10]*n[13]+n[8]*n[5]*n[14]-n[8]*n[6]*n[13]-n[12]*n[5]*n[10]+n[12]*n[6]*n[9],r[1]=-n[1]*n[10]*n[15]+n[1]*n[11]*n[14]+n[9]*n[2]*n[15]-n[9]*n[3]*n[14]-n[13]*n[2]*n[11]+n[13]*n[3]*n[10],r[5]=n[0]*n[10]*n[15]-n[0]*n[11]*n[14]-n[8]*n[2]*n[15]+n[8]*n[3]*n[14]+n[12]*n[2]*n[11]-n[12]*n[3]*n[10],r[9]=-n[0]*n[9]*n[15]+n[0]*n[11]*n[13]+n[8]*n[1]*n[15]-n[8]*n[3]*n[13]-n[12]*n[1]*n[11]+n[12]*n[3]*n[9],r[13]=n[0]*n[9]*n[14]-n[0]*n[10]*n[13]-n[8]*n[1]*n[14]+n[8]*n[2]*n[13]+n[12]*n[1]*n[10]-n[12]*n[2]*n[9],r[2]=n[1]*n[6]*n[15]-n[1]*n[7]*n[14]-n[5]*n[2]*n[15]+n[5]*n[3]*n[14]+n[13]*n[2]*n[7]-n[13]*n[3]*n[6],r[6]=-n[0]*n[6]*n[15]+n[0]*n[7]*n[14]+n[4]*n[2]*n[15]-n[4]*n[3]*n[14]-n[12]*n[2]*n[7]+n[12]*n[3]*n[6],r[10]=n[0]*n[5]*n[15]-n[0]*n[7]*n[13]-n[4]*n[1]*n[15]+n[4]*n[3]*n[13]+n[12]*n[1]*n[7]-n[12]*n[3]*n[5],r[14]=-n[0]*n[5]*n[14]+n[0]*n[6]*n[13]+n[4]*n[1]*n[14]-n[4]*n[2]*n[13]-n[12]*n[1]*n[6]+n[12]*n[2]*n[5],r[3]=-n[1]*n[6]*n[11]+n[1]*n[7]*n[10]+n[5]*n[2]*n[11]-n[5]*n[3]*n[10]-n[9]*n[2]*n[7]+n[9]*n[3]*n[6],r[7]=n[0]*n[6]*n[11]-n[0]*n[7]*n[10]-n[4]*n[2]*n[11]+n[4]*n[3]*n[10]+n[8]*n[2]*n[7]-n[8]*n[3]*n[6],r[11]=-n[0]*n[5]*n[11]+n[0]*n[7]*n[9]+n[4]*n[1]*n[11]-n[4]*n[3]*n[9]-n[8]*n[1]*n[7]+n[8]*n[3]*n[5],r[15]=n[0]*n[5]*n[10]-n[0]*n[6]*n[9]-n[4]*n[1]*n[10]+n[4]*n[2]*n[9]+n[8]*n[1]*n[6]-n[8]*n[2]*n[5],i=n[0]*r[0]+n[1]*r[4]+n[2]*r[8]+n[3]*r[12],0===i)return this;for(i=1/i,o=0;o<16;o++)e[o]=r[o]*i;return this},e.prototype.invert=function(){return this.setInverseOf(this)},e.prototype.setOrtho=function(t,o,n,e,r,i){let s,a,l,c;if(t===o||n===e||r===i)throw"null frustum";return a=1/(o-t),l=1/(e-n),c=1/(i-r),s=this.elements,s[0]=2*a,s[1]=0,s[2]=0,s[3]=0,s[4]=0,s[5]=2*l,s[6]=0,s[7]=0,s[8]=0,s[9]=0,s[10]=-2*c,s[11]=0,s[12]=-(o+t)*a,s[13]=-(e+n)*l,s[14]=-(i+r)*c,s[15]=1,this},e.prototype.ortho=function(t,o,n,r,i,s){return this.concat((new e).setOrtho(t,o,n,r,i,s))},e.prototype.setFrustum=function(t,o,n,e,r,i){let s,a,l,c;if(t===o||e===n||r===i)throw"null frustum";if(r<=0)throw"near <= 0";if(i<=0)throw"far <= 0";return a=1/(o-t),l=1/(e-n),c=1/(i-r),s=this.elements,s[0]=2*r*a,s[1]=0,s[2]=0,s[3]=0,s[4]=0,s[5]=2*r*l,s[6]=0,s[7]=0,s[8]=(o+t)*a,s[9]=(e+n)*l,s[10]=-(i+r)*c,s[11]=-1,s[12]=0,s[13]=0,s[14]=-2*r*i*c,s[15]=0,this},e.prototype.frustum=function(t,o,n,r,i,s){return this.concat((new e).setFrustum(t,o,n,r,i,s))},e.prototype.setPerspective=function(t,o,n,e){let r,i,s,a;if(n===e||0===o)throw"null frustum";if(n<=0)throw"near <= 0";if(e<=0)throw"far <= 0";if(t=Math.PI*t/180/2,s=Math.sin(t),0===s)throw"null frustum";return i=1/(e-n),a=Math.cos(t)/s,r=this.elements,r[0]=a/o,r[1]=0,r[2]=0,r[3]=0,r[4]=0,r[5]=a,r[6]=0,r[7]=0,r[8]=0,r[9]=0,r[10]=-(e+n)*i,r[11]=-1,r[12]=0,r[13]=0,r[14]=-2*n*e*i,r[15]=0,this},e.prototype.perspective=function(t,o,n,r){return this.concat((new e).setPerspective(t,o,n,r))},e.prototype.setScale=function(t,o,n){const e=this.elements;return e[0]=t,e[4]=0,e[8]=0,e[12]=0,e[1]=0,e[5]=o,e[9]=0,e[13]=0,e[2]=0,e[6]=0,e[10]=n,e[14]=0,e[3]=0,e[7]=0,e[11]=0,e[15]=1,this},e.prototype.scale=function(t,o,n){const e=this.elements;return e[0]*=t,e[4]*=o,e[8]*=n,e[1]*=t,e[5]*=o,e[9]*=n,e[2]*=t,e[6]*=o,e[10]*=n,e[3]*=t,e[7]*=o,e[11]*=n,this},e.prototype.setTranslate=function(t,o,n){const e=this.elements;return e[0]=1,e[4]=0,e[8]=0,e[12]=t,e[1]=0,e[5]=1,e[9]=0,e[13]=o,e[2]=0,e[6]=0,e[10]=1,e[14]=n,e[3]=0,e[7]=0,e[11]=0,e[15]=1,this},e.prototype.translate=function(t,o,n){const e=this.elements;return e[12]+=e[0]*t+e[4]*o+e[8]*n,e[13]+=e[1]*t+e[5]*o+e[9]*n,e[14]+=e[2]*t+e[6]*o+e[10]*n,e[15]+=e[3]*t+e[7]*o+e[11]*n,this},e.prototype.setRotate=function(t,o,n,e){let r,i,s,a,l,c,u,p,h,f,m,v;return t=Math.PI*t/180,r=this.elements,i=Math.sin(t),s=Math.cos(t),0!==o&&0===n&&0===e?(o<0&&(i=-i),r[0]=1,r[4]=0,r[8]=0,r[12]=0,r[1]=0,r[5]=s,r[9]=-i,r[13]=0,r[2]=0,r[6]=i,r[10]=s,r[14]=0,r[3]=0,r[7]=0,r[11]=0,r[15]=1):0===o&&0!==n&&0===e?(n<0&&(i=-i),r[0]=s,r[4]=0,r[8]=i,r[12]=0,r[1]=0,r[5]=1,r[9]=0,r[13]=0,r[2]=-i,r[6]=0,r[10]=s,r[14]=0,r[3]=0,r[7]=0,r[11]=0,r[15]=1):0===o&&0===n&&0!==e?(e<0&&(i=-i),r[0]=s,r[4]=-i,r[8]=0,r[12]=0,r[1]=i,r[5]=s,r[9]=0,r[13]=0,r[2]=0,r[6]=0,r[10]=1,r[14]=0,r[3]=0,r[7]=0,r[11]=0,r[15]=1):(a=Math.sqrt(o*o+n*n+e*e),1!==a&&(l=1/a,o*=l,n*=l,e*=l),c=1-s,u=o*n,p=n*e,h=e*o,f=o*i,m=n*i,v=e*i,r[0]=o*o*c+s,r[1]=u*c+v,r[2]=h*c-m,r[3]=0,r[4]=u*c-v,r[5]=n*n*c+s,r[6]=p*c+f,r[7]=0,r[8]=h*c+m,r[9]=p*c-f,r[10]=e*e*c+s,r[11]=0,r[12]=0,r[13]=0,r[14]=0,r[15]=1),this},e.prototype.rotate=function(t,o,n,r){return this.concat((new e).setRotate(t,o,n,r))},e.prototype.setLookAt=function(t,o,n,e,r,i,s,a,l){let c,u,p,h,f,m,v,_,y,d,g,w;return u=e-t,p=r-o,h=i-n,f=1/Math.sqrt(u*u+p*p+h*h),u*=f,p*=f,h*=f,m=p*l-h*a,v=h*s-u*l,_=u*a-p*s,y=1/Math.sqrt(m*m+v*v+_*_),m*=y,v*=y,_*=y,d=v*h-_*p,g=_*u-m*h,w=m*p-v*u,c=this.elements,c[0]=m,c[1]=d,c[2]=-u,c[3]=0,c[4]=v,c[5]=g,c[6]=-p,c[7]=0,c[8]=_,c[9]=w,c[10]=-h,c[11]=0,c[12]=0,c[13]=0,c[14]=0,c[15]=1,this.translate(-t,-o,-n)},e.prototype.lookAt=function(t,o,n,r,i,s,a,l,c){return this.concat((new e).setLookAt(t,o,n,r,i,s,a,l,c))},e.prototype.dropShadow=function(t,o){const n=new e,r=n.elements,i=t[0]*o[0]+t[1]*o[1]+t[2]*o[2]+t[3]*o[3];return r[0]=i-o[0]*t[0],r[1]=-o[1]*t[0],r[2]=-o[2]*t[0],r[3]=-o[3]*t[0],r[4]=-o[0]*t[1],r[5]=i-o[1]*t[1],r[6]=-o[2]*t[1],r[7]=-o[3]*t[1],r[8]=-o[0]*t[2],r[9]=-o[1]*t[2],r[10]=i-o[2]*t[2],r[11]=-o[3]*t[2],r[12]=-o[0]*t[3],r[13]=-o[1]*t[3],r[14]=-o[2]*t[3],r[15]=i-o[3]*t[3],this.concat(n)},e.prototype.dropShadowDirectionally=function(t,o,n,e,r,i,s,a,l){const c=e*t+r*o+i*n;return this.dropShadow([t,o,n,-c],[s,a,l,0])};var r=function(t){const o=new Float32Array(3);t&&"object"===typeof t&&(o[0]=t[0],o[1]=t[1],o[2]=t[2]),this.elements=o};r.prototype.normalize=function(){const t=this.elements,o=t[0],n=t[1],e=t[2];let r=Math.sqrt(o*o+n*n+e*e);return r?(1==r||(r=1/r,t[0]=o*r,t[1]=n*r,t[2]=e*r),this):(t[0]=0,t[1]=0,t[2]=0,this)};var i=function(t){const o=new Float32Array(4);t&&"object"===typeof t&&(o[0]=t[0],o[1]=t[1],o[2]=t[2],o[3]=t[3]),this.elements=o}},8789:(t,o,n)=>{n.d(o,{Le:()=>e,e3:()=>r,HJ:()=>i,t$:()=>s});const e={vshader:"\n            attribute vec4 a_position;\n            attribute vec4 a_color;\n            varying vec4 f_color;\n            uniform mat4 u_modelMatrix;\n            uniform vec4 u_eye;\n            uniform mat4 u_mvpMatrix; \n            varying float v_dist;\n            void main(){\n                gl_Position = u_mvpMatrix * a_position;\n                f_color = a_color;\n                v_dist = gl_Position.w;\n            }\n        ",fshader:"\n            precision mediump float;\n            varying vec4 f_color;\n            varying float v_dist;\n            uniform vec4 u_fogColor;\n            uniform vec2 u_fogDist;\n            void main(){\n                float fogFactor = clamp((u_fogDist.y - v_dist) / (u_fogDist.y - u_fogDist.x), 0.0, 1.0);\n                vec4 color = mix(u_fogColor, f_color, fogFactor);\n                gl_FragColor = color;\n            }\n        "},r={vshader:"\n            attribute vec4 a_position;\n            attribute vec4 a_color;\n            varying vec4 f_color;\n            void main(){\n                gl_Position = a_position;\n                f_color = a_color;\n                gl_PointSize = 100.0;\n            }\n        ",fshader:"\n            precision mediump float;\n            varying vec4 f_color;\n            void main(){\n                gl_FragColor = f_color;\n                float d = distance(gl_PointCoord, vec2(0.5, 0.5));\n                if(d < 0.5) {\n                        gl_FragColor = vec4(f_color); \n                     } else { discard; }\n                }\n        "},i={vshader:"\n            attribute vec4 a_position;\n            uniform mat4 u_mvpMatrix;\n            void main(){\n                gl_Position = u_mvpMatrix * a_position;\n            }\n        ",fshader:"\n            precision mediump float;\n            void main(){\n                gl_FragColor = vec4(gl_FragCoord.z, 0, 0, 0);\n            }\n        "},s={vshader:"\n        attribute vec4 a_position;\n        attribute vec4 a_color;\n        uniform mat4 u_mvpMatrix;\n        uniform mat4 u_mvpMatrixFromLight;\n        varying vec4 v_positionFromLight;\n        varying vec4 v_color;\n        void main(){\n            gl_Position = u_mvpMatrix * a_position;\n            v_positionFromLight = u_mvpMatrixFromLight * a_position;\n            v_color = a_color;\n        }\n    ",fshader:"\n        precision mediump float;\n        uniform sampler2D u_shadowMap;\n        varying vec4 v_positionFromLight;\n        varying vec4 v_color;\n        void main(){\n            vec3 shadowCoord = (v_positionFromLight.xyz / v_positionFromLight.w)/2.0 + 0.5;\n            vec4 rgbaDepth = texture2D(u_shadowMap, shadowCoord.xy);\n            float depth = rgbaDepth.r;\n            float visibility = (shadowCoord.z > depth + 0.005) ? 0.7: 1.0;\n            gl_FragColor = vec4(v_color.rgb * visibility, v_color.a);\n        }\n    "}}}]);