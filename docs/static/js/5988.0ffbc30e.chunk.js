"use strict";(globalThis.webpackChunktdnq_github_io=globalThis.webpackChunktdnq_github_io||[]).push([[5988],{5988:(t,i,e)=>{e.r(i),e.d(i,{default:()=>c});var s=e(3562);class c{constructor(t){this.setPickPosition=t=>{let i=this.getELeRelativePosition(t);this.pickPosition.set(i.x/this.canvas.width*2-1,i.y/this.canvas.height*-2+1)},this.clearPickPosition=()=>{this.pickPosition.set(-1e5,-1e5)},this.raycaster=new s.iMs,this.pickedObject=null,this.pickedObjectSavedColor=0,this.canvas=t,this.pickPosition=new s.FM8(-1e5,-1e5)}pick(t,i,e){this.pickedObject&&(this.pickedObject.material.emissive.setHex(this.pickedObjectSavedColor),this.pickedObject=null);let s=this.pickPosition;this.raycaster.setFromCamera(s,i);const c=this.raycaster.intersectObjects(t.children);c.length&&(this.pickedObject=c[0].object,this.pickedObjectSavedColor=this.pickedObject.material.emissive.getHex(),this.pickedObject.material.emissive.setHex(8*e%2>1?16776960:16711680))}getELeRelativePosition(t){let i=this.canvas.getBoundingClientRect();return{x:(t.clientX-i.left)*this.canvas.width/i.width,y:(t.clientY-i.top)*this.canvas.height/i.height}}bindEvent(){this.canvas.addEventListener("mousemove",this.setPickPosition),this.canvas.addEventListener("mousemout",this.clearPickPosition),this.canvas.addEventListener("mousemleave",this.clearPickPosition),this.canvas.addEventListener("touchstart",(t=>{t.preventDefault(),this.setPickPosition(t.touches[0])}),{passive:!1}),this.canvas.addEventListener("touchmove",(t=>this.setPickPosition(t.touches[0]))),this.canvas.addEventListener("touchend",this.clearPickPosition)}}}}]);